[package]
name = "cglue"
version = "0.3.5"
authors = ["Aurimas Bla≈æulionis <0x60@pm.me>"]
edition = "2018"
description = "FFI safe abstractions for making plugins and C-compatible libraries"
license = "MIT"
documentation = "https://docs.rs/cglue"
repository = "https://github.com/h33p/cglue"
keywords = [ "cglue", "abi", "ffi", "cbindgen", "macro" ]
categories = [ "api-bindings", "accessibility", "parsing" ]
readme = "../README.md"

[dependencies]
cglue-macro = { version = "0.3", path = "../cglue-macro" }
no-std-compat = { version = "0.4", features = ["alloc"] }
serde = { version = "1", optional = true, default-features = false, features = ["derive", "alloc"] }
try_default = { version = "= 1.0.0", optional = true }
abi_stable = { version = "0.10", optional = true }
log = { version = "0.4", optional = true }
tarc = { version = "0.1", default-features = false }
_futures = { package = "futures", version = "0.3", optional = true, default-features = false }

[build-dependencies]
rustc_version = "0.4"

[dev-dependencies]
pollster = "0.2"

[features]
default = ["std"]
std = ["no-std-compat/std", "tarc/std"]
rust_void = ["cglue-macro/rust_void"]
unstable = ["cglue-macro/unstable", "try_default"]
task = ["cglue-macro/task"]
layout_checks = ["cglue-macro/layout_checks", "abi_stable"]
futures = ["_futures", "task", "cglue-macro/futures"]
unwind_abi_default = ["cglue-macro/unwind_abi_default"]
unwind_abi_ext = ["cglue-macro/unwind_abi_ext"]

[package.metadata.docs.rs]
features = ["std", "task", "futures"]
